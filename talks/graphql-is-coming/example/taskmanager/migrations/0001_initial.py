# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-04 16:20
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(
                    default=False,
                    help_text=
                    'Designates that this user has all permissions without explicitly assigning them.',
                    verbose_name='superuser status')),
                ('username', models.CharField(
                    error_messages={
                        'unique': 'A user with that username already exists.'
                    },
                    help_text=
                    'Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                    max_length=150,
                    unique=True,
                    validators=[
                        django.contrib.auth.validators.
                        UnicodeUsernameValidator()
                    ],
                    verbose_name='username')),
                ('first_name', models.CharField(
                    blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(
                    blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(
                    blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(
                    default=False,
                    help_text=
                    'Designates whether the user can log into this admin site.',
                    verbose_name='staff status')),
                ('is_active', models.BooleanField(
                    default=True,
                    help_text=
                    'Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                    verbose_name='active')),
                ('date_joined', models.DateTimeField(
                    default=django.utils.timezone.now,
                    verbose_name='date joined')),
                ('chief', models.ForeignKey(
                    null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='subordinates',
                    to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(
                    blank=True,
                    help_text=
                    'The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                    related_name='user_set',
                    related_query_name='user',
                    to='auth.Group',
                    verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(
                    blank=True,
                    help_text='Specific permissions for this user.',
                    related_name='user_set',
                    related_query_name='user',
                    to='auth.Permission',
                    verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('date',
                 models.DateTimeField(default=django.utils.timezone.now)),
                ('text', models.TextField()),
                ('author', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='comments',
                    to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'comments',
                'verbose_name': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('name', models.CharField(
                    choices=[('n', 'new'), ('s', 'started'),
                             ('c', 'completed'), ('r', 'rejected')],
                    default='n',
                    max_length=1)),
                ('date',
                 models.DateTimeField(default=django.utils.timezone.now)),
                ('changed_by', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'statuses',
                'verbose_name': 'status',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('assigned_to', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='assigned_tasks',
                    to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='created_tasks',
                    to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'tasks',
                'verbose_name': 'task',
            },
        ),
        migrations.AddField(
            model_name='status',
            name='task',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='status_history',
                to='taskmanager.Task'),
        ),
        migrations.AddField(
            model_name='comment',
            name='task',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='comments',
                to='taskmanager.Task'),
        ),
    ]
